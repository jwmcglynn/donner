"""Donner is a modern C++20 SVG rendering library which intends to provide easily
embeddable SVG support into apps and games, enabling browser-level functionalit
 without the browser."""

module(name = "donner", version = "0.1.2")

local_repository = use_repo_rule("//third_party:bazel/local.bzl", "local_repository")
new_local_repository = use_repo_rule("//third_party:bazel/local.bzl", "new_local_repository")
git_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
new_git_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")

# Build dependencies
bazel_dep(name = "apple_support", version = "1.22.0", repo_name = "build_bazel_apple_support")  # Must be before rules_cc

bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")

##
## Third-party dependencies
##

# Skia dependencies
bazel_dep(name = "rules_license", version = "1.0.0")

local_repository(
    name = "skia_user_config",
    path = "third_party/skia_user_config",
)

git_repository(
    name = "skia",
    commit = "d945cbcbbb5834245256e883803c2704f3a32e18",
    remote = "https://github.com/google/skia",
)

bazel_deps = use_repo_rule("@skia//bazel:deps.bzl", "bazel_deps")
c_plus_plus_deps = use_repo_rule("@skia//bazel:deps.bzl", "c_plus_plus_deps")
header_based_configs = use_repo_rule("@skia//bazel:deps.bzl", "header_based_configs")

bazel_dep(name = "freetype", version = "2.13.3")

git_repository(
    name = "entt",
    remote = "https://github.com/skypjack/entt",
    tag = "v3.13.2",
)

new_local_repository(
    name = "frozen",
    build_file = "//third_party:BUILD.frozen",
    path = "third_party/frozen",
)

new_local_repository(
    name = "stb",
    build_file = "//third_party:BUILD.stb",
    path = "third_party/stb",
)

# Used for stacktraces and failure signal handler in apps
bazel_dep(name = "abseil-cpp", repo_name = "com_google_absl", version = "20250127.1")

##
## Test dependencies
##
# re2 is not used directly, but needs to use this version to resolve a build error in deps (googletest)
bazel_dep(name = "re2", version = "2024-07-02.bcr.1", dev_dependency = True)
bazel_dep(name = "googletest", repo_name = "com_google_gtest", version = "1.17.0", dev_dependency = True)

bazel_dep(name = "nlohmann_json", version = "3.12.0", dev_dependency = True)

bazel_dep(name = "pixelmatch-cpp17", version = "0.0.0", dev_dependency = True)
git_override(
    module_name = "pixelmatch-cpp17",
    remote = "https://github.com/jwmcglynn/pixelmatch-cpp17",
    commit = "8c8f6a56419de53c9aa205d4308074bbfa0aaac7",
)

new_local_repository(
    name = "css-parsing-tests",
    build_file = "//third_party:BUILD.css-parsing-tests",
    path = "third_party/css-parsing-tests",
)

new_git_repository(
    name = "resvg-test-suite",
    build_file = "//third_party:BUILD.resvg-test-suite",
    commit = "682a9c8da8c580ad59cba0ef8cb8a8fd5534022f",
    remote = "https://github.com/RazrFalcon/resvg-test-suite.git",
)

# Skia dependencies
bazel_dep(name = "rules_go", version = "0.54.0")
bazel_dep(name = "rules_python", version = "1.4.0", dev_dependency = True)

pip = use_extension(
    "@rules_python//python/extensions:pip.bzl",
    "pip",
    dev_dependency = True,
)

pip.parse(
    hub_name = "donner_tools_py_deps",
    python_version = "3.11",
    requirements_lock = "//tools/python:requirements.txt",
)

use_repo(pip, "donner_tools_py_deps")

#
# Toolchain
#

bazel_dep(name = "toolchains_llvm", version = "1.4.0", dev_dependency = True)

# To use a local copy of the toolchains_llvm repository, uncomment the following.
# local_path_override(
#     module_name = "toolchains_llvm",
#     path = "../toolchains_llvm",
# )

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm", dev_dependency = True)

llvm.toolchain(
    name = "llvm_toolchain",
    llvm_version = "20.1.2",
)
use_repo(llvm, "llvm_toolchain", "llvm_toolchain_llvm")

# NOTE: This to use this toolchain specify --config=latest_llvm
# This is enabled by default on Linux, disabled by default on macOS
# register_toolchains("@llvm_toolchain//:all", dev_dependency = True)

bazel_dep(name = "zstd", version = "1.5.7", dev_dependency = True)

#
# Devtools
#

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor",
    commit = "4f28899228fb3ad0126897876f147ca15026151e",
)

git_repository(
    name = "bazel_clang_tidy",
    commit = "07bc38524e61d9501d772726d6e27cb980db42c7",
    remote = "https://github.com/erenon/bazel_clang_tidy.git",
)

bazel_dep(name = "rules_proto", version = "7.1.0", dev_dependency = True)

bazel_dep(name = "bloaty", version = "0.0.0", dev_dependency = True)

git_override(
    module_name = "bloaty",
    remote = "https://github.com/jwmcglynn/bloaty",
    commit = "a655c418811ef5097e37a562ce62f925bda72d88",
)

#
# SVG Viewer
#

bazel_dep(name = "imgui", version = "0.0.0", dev_dependency = True)
git_override(
    module_name = "imgui",
    remote = "https://github.com/ocornut/imgui",
    commit = "ee1deccc08c14ab1e6abcfa6aae11d915763cdb7",
    patches = [
        "//third_party/patches:imgui_bazel_build_files.patch",
    ],
    patch_strip = 1,
)

bazel_dep(name = "glfw", version = "0.0.0", dev_dependency = True)
git_override(
    module_name = "glfw",
    remote = "https://github.com/glfw/glfw",
    commit = "e7ea71be039836da3a98cea55ae5569cb5eb885c",
    patches = [
        "//third_party/patches:glfw_bazel_build_files.patch",
    ],
    patch_strip = 1,
)
