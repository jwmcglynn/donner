// Copyright 2019-2023 hdoc
// SPDX-License-Identifier: AGPL-3.0-only

#pragma once

#include <string>
#include <unordered_map>

static const char* cppreferenceURL = "https://en.cppreference.com/w/cpp/";

/// Map of std:: types to their cppreference.com URLs.
/// The full URL is made by concatenating the value for a given key with cppreferenceURL.
static std::unordered_map<std::string, std::string> StdTypeURLMap = {
    {"std::array", "container/array"},
    {"std::vector", "container/vector"},
    {"std::deque", "container/deque"},
    {"std::map", "container/map"},
    {"std::unordered_map", "container/unordered_map"},
    {"std::set", "container/set"},
    {"std::unordered_set", "container/unordered_set"},
    {"std::priority_queue", "container/priority_queue"},
    {"std::span", "container/span"},
    {"std::forward_list", "container/forward_list"},
    {"std::list", "container/list"},
    {"std::multiset", "container/multiset"},
    {"std::multimap", "container/multimap"},
    {"std::unordered_multiset", "container/unordered_multiset"},
    {"std::unordered_multimap", "container/unordered_multimap"},
    {"std::stack", "container/stack"},
    {"std::queue", "container/queue"},
    {"std::pair", "utility/pair"},
    {"std::tuple", "utility/tuple"},
    {"std::string", "string/basic_string"},
    {"std::string_view", "string/basic_string_view"},
    {"std::atomic", "atomic/atomic"},
    {"std::atomic_ref", "atomic/atomic_ref"},
    {"std::atomic_flag", "atomic/atomic_flag"},
    {"std::unique_ptr", "memory/unique_ptr"},
    {"std::shared_ptr", "memory/shared_ptr"},
    {"std::weak_ptr", "memory/weak_ptr"},
    {"std::size_t", "types/size_t"},
    {"std::ptrdiff_t", "types/ptrdiff_t"},
    {"std::nullptr_t", "types/nullptr_t"},
    {"std::filesystem::path", "filesystem/path"},
    {"std::filesystem::directory_entry", "filesystem/directory_entry"},
    {"std::filesystem::directory_iterator", "filesystem/directory_iterator"},
    {"std::filesystem::recursive_directory_iterator", "filesystem/recursive_directory_iterator"},
    {"std::filesystem::file_status", "filesystem/file_status"},
    {"std::filesystem::space_info", "filesystem/space_info"},
    {"std::filesystem::file_type", "filesystem/file_type"},
    {"std::filesystem::perms", "filesystem/perms"},
    {"std::filesystem::perm_options", "filesystem/perm_options"},
    {"std::filesystem::copy_options", "filesystem/copy_options"},
    {"std::filesystem::directory_options", "filesystem/directory_options"},
    {"std::filesystem::file_time_type", "filesystem/file_time_type"},
    {"std::error_code", "error/error_code"},
    {"std::thread", "thread/thread"},
    {"std::jthread", "thread/jthread"},
    {"std::stop_token", "thread/stop_token"},
    {"std::stop_source", "thread/stop_source"},
    {"std::stop_callback", "thread/stop_callback"},
    {"std::condition_variable", "thread/condition_variable"},
    {"std::condition_variable_any", "thread/condition_variable_any"},
    {"std::cv_status", "thread/cv_status"},
    {"std::counting_semaphore", "thread/counting_semaphore"},
    {"std::binary_semaphore", "thread/counting_semaphore"},
    {"std::mutex", "thread/mutex"},
    {"std::timed_mutex", "thread/timed_mutex"},
    {"std::recursive_mutex", "thread/recursive_mutex"},
    {"std::recursive_timed_mutex", "thread/recursive_timed_mutex"},
    {"std::shared_mutex", "thread/shared_mutex"},
    {"std::shared_timed_mutex", "thread/shared_timed_mutex"},
    {"std::lock_guard", "thread/lock_guard"},
    {"std::scoped_lock", "thread/scoped_lock"},
    {"std::unique_lock", "thread/unique_lock"},
    {"std::shared_lock", "thread/shared_lock"},
    {"std::defer_lock_t", "thread/lock_tag_t"},
    {"std::try_to_lock_t", "thread/lock_tag_t"},
    {"std::adopt_lock_t", "thread/lock_tag_t"},
    {"std::promise", "thread/promise"},
    {"std::packaged_task", "thread/packaged_task"},
    {"std::future", "thread/future"},
    {"std::shared_future", "thread/shared_future"},
    {"std::async", "thread/async"},
    {"std::launch", "thread/launch"},
    {"std::future_status", "thread/future_status"},
    {"std::future_error", "thread/future_error"},
    {"std::future_category", "thread/future_category"},
    {"std::future_errc", "thread/future_errc"},
    {"std::latch", "thread/latch"},
    {"std::barrier", "thread/barrier"},
    {"std::complex", "numeric/complex"},
    {"std::valarray", "numeric/valarray"},
    {"std::numeric_limits", "types/numeric_limits"},
    {"std::optional", "utility/optional"},
    {"std::variant", "utility/variant"},
    {"std::any", "utility/any"},
    {"std::hash", "utility/hash"},
    {"std::basic_format_arg", "utility/format/basic_format_arg"},
    {"std::formatter", "utility/format/formatter"},
    {"std::basic_format_parse_context", "utility/format/basic_format_parse_context"},
    {"std::format_parse_context", "utility/format/basic_format_parse_context"},
    {"std::wformat_parse_context", "utility/format/basic_format_parse_context"},
    {"std::basic_format_context", "utility/format/basic_format_context"},
    {"std::format_context", "utility/format/basic_format_context"},
    {"std::wformat_context", "utility/format/basic_format_context"},
    {"std::basic_format_args", "utility/format/basic_format_args"},
    {"std::format_args", "utility/format/basic_format_args"},
    {"std::wformat_args", "utility/format/basic_format_args"},
    {"std::format_error", "utility/format/format_error"},
    {"std::function", "utility/functional/function"},
    {"std::bad_function_call", "utility/functional/bad_function_call"},
    {"std::identity", "utility/functional/identity"},
    {"std::is_placeholder", "utility/functional/is_placeholder"},
    {"std::default_searcher", "utility/functional/default_searcher"},
    {"std::boyer_moore_searcher", "utility/functional/boyer_moore_searcher"},
    {"std::boyer_moore_horspool_searcher", "utility/functional/boyer_moore_horspool_searcher"},
    {"std::reference_wrapper", "utility/functional/reference_wrapper"},
    {"std::integral_constant", "types/integral_constant"},
    {"std::bool_constant", "types/integral_constant"},
    {"std::is_void", "types/is_void"},
    {"std::is_null_pointer", "types/is_null_pointer"},
    {"std::is_integral", "types/is_integral"},
    {"std::is_floating_point", "types/is_floating_point"},
    {"std::is_array", "types/is_array"},
    {"std::is_enum", "types/is_enum"},
    {"std::is_union", "types/is_union"},
    {"std::is_class", "types/is_class"},
    {"std::is_function", "types/is_function"},
    {"std::is_pointer", "types/is_pointer"},
    {"std::is_lvalue_reference", "types/is_lvalue_reference"},
    {"std::is_rvalue_reference", "types/is_rvalue_reference"},
    {"std::is_member_object_pointer", "types/is_member_object_pointer"},
    {"std::is_member_function_pointer", "types/is_member_function_pointer"},
    {"std::is_fundamental", "types/is_fundamental"},
    {"std::is_arithmetic", "types/is_arithmetic"},
    {"std::is_scalar", "types/is_scalar"},
    {"std::is_object", "types/is_object"},
    {"std::is_compound", "types/is_compound"},
    {"std::is_reference", "types/is_reference"},
    {"std::is_member_pointer", "types/is_member_pointer"},
    {"std::is_const", "types/is_const"},
    {"std::is_volatile", "types/is_volatile"},
    {"std::is_trivial", "types/is_trivial"},
    {"std::is_trivially_copyable", "types/is_trivially_copyable"},
    {"std::is_standard_layout", "types/is_standard_layout"},
    {"std::is_pod", "types/is_pod"},
    {"std::is_literal_type", "types/is_literal_type"},
    {"std::has_unique_object_representations", "types/has_unique_object_representations"},
    {"std::is_empty", "types/is_empty"},
    {"std::is_polymorphic", "types/is_polymorphic"},
    {"std::is_abstract", "types/is_abstract"},
    {"std::is_final", "types/is_final"},
    {"std::is_aggregate", "types/is_aggregate"},
    {"std::is_signed", "types/is_signed"},
    {"std::is_unsigned", "types/is_unsigned"},
    {"std::is_bounded_array", "types/is_bounded_array"},
    {"std::is_unbounded_array", "types/is_unbounded_array"},
    {"std::is_scoped_enum", "types/is_scoped_enum"},
    {"std::is_constructible", "types/is_constructible"},
    {"std::is_trivially_constructible", "types/is_constructible"},
    {"std::is_nothrow_constructible", "types/is_constructible"},
    {"std::is_default_constructible", "types/is_default_constructible"},
    {"std::is_trivially_default_constructible", "types/is_default_constructible"},
    {"std::is_nothrow_default_constructible", "types/is_default_constructible"},
    {"std::is_copy_constructible", "types/is_copy_constructible"},
    {"std::is_trivially_copy_constructible", "types/is_copy_constructible"},
    {"std::is_nothrow_copy_constructible", "types/is_copy_constructible"},
    {"std::is_move_constructible", "types/is_move_constructible"},
    {"std::is_trivially_move_constructible", "types/is_move_constructible"},
    {"std::is_nothrow_move_constructible", "types/is_move_constructible"},
    {"std::is_assignable", "types/is_assignable"},
    {"std::is_trivially_assignable", "types/is_assignable"},
    {"std::is_nothrow_assignable", "types/is_assignable"},
    {"std::is_copy_assignable", "types/is_copy_assignable"},
    {"std::is_trivially_copy_assignable", "types/is_assignable"},
    {"std::is_nothrow_copy_assignable", "types/is_assignable"},
    {"std::is_move_assignable", "types/is_move_assignable"},
    {"std::is_trivially_move_assignable", "types/is_move_assignable"},
    {"std::is_nothrow_move_assignable", "types/is_move_assignable"},
    {"std::is_destructible", "types/is_destructible"},
    {"std::is_trivially_destructible", "types/is_destructible"},
    {"std::is_nothrow_destructible", "types/is_destructible"},
    {"std::has_virtual_destructor", "types/has_virtual_destructor"},
    {"std::is_swappable_with", "types/is_swappable"},
    {"std::is_swappable", "types/is_swappable"},
    {"std::is_nothrow_swappable_with", "types/is_swappable"},
    {"std::is_nothrow_swappable", "types/is_swappable"},
    {"std::alignment_of", "types/alignment_of"},
    {"std::rank", "types/rank"},
    {"std::extent", "types/extent"},
    {"std::is_same", "types/is_same"},
    {"std::is_base_of", "types/is_base_of"},
    {"std::is_convertible", "types/is_convertible"},
    {"std::is_nothrow_convertible", "types/is_convertible"},
    {"std::is_layout_compatible", "types/is_layout_compatible"},
    {"std::is_pointer_interconvertible_base_of", "types/is_pointer_interconvertible_base_of"},
    {"std::is_invocable", "types/is_invocable"},
    {"std::is_invocable_r", "types/is_invocable"},
    {"std::is_nothrow_invocable", "types/is_invocable"},
    {"std::is_nothrow_invocable_r", "types/is_invocable"},
    {"std::remove_cv", "types/remove_cv"},
    {"std::remove_const", "types/remove_cv"},
    {"std::remove_volatile", "types/remove_cv"},
    {"std::add_cv", "types/add_cv"},
    {"std::add_const", "types/add_cv"},
    {"std::add_volatile", "types/add_cv"},
    {"std::remove_reference", "types/remove_reference"},
    {"std::add_lvalue_reference", "types/add_reference"},
    {"std::add_rvalue_reference", "types/add_reference"},
    {"std::remove_pointer", "types/remove_pointer"},
    {"std::add_pointer", "types/add_pointer"},
    {"std::make_signed", "types/make_signed"},
    {"std::make_unsigned", "types/make_unsigned"},
    {"std::remove_extent", "types/remove_extent"},
    {"std::remove_all_extents", "types/remove_all_extents"},
    {"std::aligned_storage", "types/aligned_storage"},
    {"std::aligned_union", "types/aligned_union"},
    {"std::decay", "types/decay"},
    {"std::remove_cvref", "types/remove_cvref"},
    {"std::enable_if", "types/enable_if"},
    {"std::conditional", "types/conditional"},
    {"std::common_type", "types/common_type"},
    {"std::underlying_type", "types/underlying_type"},
    {"std::result_of", "types/result_of"},
    {"std::invoke_result", "types/result_of"},
    {"std::void_t", "types/void_t"},
    {"std::conjunction", "types/conjunction"},
    {"std::disjunction", "types/disjunction"},
    {"std::negation", "types/negation"},
    {"std::coroutine_traits", "coroutine/coroutine_traits"},
    {"std::coroutine_handle", "coroutine/coroutine_handle"},
    {"std::noop_coroutine_promise", "coroutine/noop_coroutine_promise"},
    {"std::suspend_never", "coroutine/suspend_never"},
    {"std::suspend_always", "coroutine/suspend_always"},
    {"std::allocator", "memory/allocator"},
    {"std::allocator_traits", "memory/allocator_traits"},
    {"std::allocation_result", "memory/allocation_result"},
    {"std::allocator_arg_t", "memory/allocator_arg_t"},
    {"std::uses_allocator", "memory/uses_allocator"},
    {"std::scoped_allocator_adaptor", "memory/scoped_allocator_adaptor"},
    {"std::polymorphic_allocator", "memory/polymorphic_allocator"},
    {"std::memory_resource", "memory/memory_resource"},
    {"std::pool_options", "memory/pool_options"},
    {"std::synchronized_pool_resource", "memory/synchronized_pool_resource"},
    {"std::unsynchronized_pool_resource", "memory/unsynchronized_pool_resource"},
    {"std::monotonic_buffer_resource", "memory/monotonic_buffer_resource"},
    {"std::pointer_traits", "memory/pointer_traits"},
    {"std::chrono::system_clock", "chrono/system_clock"},
    {"std::chrono::steady_clock", "chrono/steady_clock"},
    {"std::chrono::high_resolution_clock", "chrono/high_resolution_clock"},
    {"std::chrono::is_clock", "chrono/is_clock"},
    {"std::chrono::is_clock_v", "chrono/is_clock_v"},
    {"std::chrono::utc_clock", "chrono/utc_clock"},
    {"std::chrono::tai_clock", "chrono/tai_clock"},
    {"std::chrono::gps_clock", "chrono/gps_clock"},
    {"std::chrono::file_clock", "chrono/file_clock"},
    {"std::chrono::local_t", "chrono/local_t"},
    {"std::chrono::time_point", "chrono/time_point"},
    {"std::chrono::clock_time_conversion", "chrono/clock_time_conversion"},
    {"std::chrono::duration", "chrono/duration"},
    {"std::chrono::hh_mm_ss", "chrono/hh_mm_ss"},
    {"std::chrono::last_spec", "chrono/last_spec"},
    {"std::chrono::day", "chrono/day"},
    {"std::chrono::month", "chrono/month"},
    {"std::chrono::year", "chrono/year"},
    {"std::chrono::weekday", "chrono/weekday"},
    {"std::chrono::weekday_indexed", "chrono/weekday_indexed"},
    {"std::chrono::weekday_last", "chrono/weekday_last"},
    {"std::chrono::month_day", "chrono/month_day"},
    {"std::chrono::month_day_last", "chrono/month_day_last"},
    {"std::chrono::month_weekday", "chrono/month_weekday"},
    {"std::chrono::month_weekday_last", "chrono/month_weekday_last"},
    {"std::chrono::year_month", "chrono/year_month"},
    {"std::chrono::year_month_day", "chrono/year_month_day"},
    {"std::chrono::year_month_day_last", "chrono/year_month_day_last"},
    {"std::chrono::year_month_weekday", "chrono/year_month_weekday"},
    {"std::chrono::year_month_weekday_last", "chrono/year_month_weekday_last"},
    {"std::chrono::tzdb", "chrono/tzdb"},
    {"std::chrono::tzdb_list", "chrono/tzdb_list"},
    {"std::chrono::time_zone", "chrono/time_zone"},
    {"std::chrono::sys_info", "chrono/sys_info"},
    {"std::chrono::local_info", "chrono/local_info"},
    {"std::chrono::zoned_traits", "chrono/zoned_traits"},
    {"std::chrono::zoned_time", "chrono/zoned_time"},
    {"std::chrono::leap_second", "chrono/leap_second"},
    {"std::chrono::leap_second_info", "chrono/leap_second_info"},
    {"std::chrono::time_zone_link", "chrono/time_zone_link"},
    {"std::chrono::nonexistent_local_time", "chrono/nonexistent_local_time"},
    {"std::chrono::ambiguous_local_time", "chrono/ambiguous_local_time"},
};
