#!/usr/bin/env python3
"""Generate CMakeLists.txt for the donner/base library using bazel query."""

import subprocess
from pathlib import Path

TARGET = "//donner/base:base"
PACKAGE = "donner/base"


def query_labels(attr: str) -> list[str]:
    expr = f"labels({attr}, {TARGET})"
    out = subprocess.check_output(["bazel", "query", expr], text=True)
    files = []
    prefix = f"//{PACKAGE}:"
    for line in out.splitlines():
        if line.startswith(prefix):
            files.append(line[len(prefix):])
    return files


def main() -> None:
    srcs = query_labels("srcs")
    hdrs = query_labels("hdrs")

    out_path = Path(PACKAGE) / "CMakeLists.txt"
    with out_path.open("w") as f:
        f.write("# Generated by tools/cmake/gen_base_cmakelists.py.\n")
        f.write("add_library(donner_base\n")
        for path in srcs + hdrs:
            f.write(f"  {path}\n")
        f.write(")\n\n")
        f.write("target_include_directories(donner_base PUBLIC ${PROJECT_SOURCE_DIR})\n")
        f.write("target_link_libraries(donner_base PUBLIC EnTT::EnTT)\n")
        f.write(
            "set_target_properties(donner_base PROPERTIES "
            "CXX_STANDARD 20 CXX_STANDARD_REQUIRED YES)\n"
        )


if __name__ == "__main__":
    main()
